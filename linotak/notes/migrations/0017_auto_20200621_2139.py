# Generated by Django 3.0.7 on 2020-06-21 20:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("images", "0008_auto_20200621_2139"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("notes", "0016_person_image"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="locator",
            options={"verbose_name": "locator", "verbose_name_plural": "locators"},
        ),
        migrations.AlterModelOptions(
            name="locatorimage",
            options={
                "ordering": ["-prominence"],
                "verbose_name": "locator image",
                "verbose_name_plural": "locator images",
            },
        ),
        migrations.AlterModelOptions(
            name="note",
            options={
                "ordering": ["-published", "-created"],
                "verbose_name": "note",
                "verbose_name_plural": "notes",
            },
        ),
        migrations.AlterModelOptions(
            name="notesubject",
            options={
                "ordering": ["sequence"],
                "verbose_name": "note subject",
                "verbose_name_plural": "note subjects",
            },
        ),
        migrations.AlterModelOptions(
            name="person",
            options={"verbose_name": "person", "verbose_name_plural": "persons"},
        ),
        migrations.AlterModelOptions(
            name="profile",
            options={"verbose_name": "profile", "verbose_name_plural": "profiles"},
        ),
        migrations.AlterModelOptions(
            name="series",
            options={
                "ordering": ["title"],
                "verbose_name": "series",
                "verbose_name_plural": "series",
            },
        ),
        migrations.AlterModelOptions(
            name="tag",
            options={
                "ordering": ["label"],
                "verbose_name": "tag",
                "verbose_name_plural": "tags",
            },
        ),
        migrations.AlterField(
            model_name="locator",
            name="author",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="notes.Person",
                verbose_name="author",
            ),
        ),
        migrations.AlterField(
            model_name="locator",
            name="created",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="created"
            ),
        ),
        migrations.AlterField(
            model_name="locator",
            name="images",
            field=models.ManyToManyField(
                related_name="occurences",
                related_query_name="occurrence",
                through="notes.LocatorImage",
                to="images.Image",
                verbose_name="images",
            ),
        ),
        migrations.AlterField(
            model_name="locator",
            name="modified",
            field=models.DateTimeField(auto_now=True, verbose_name="modified"),
        ),
        migrations.AlterField(
            model_name="locator",
            name="published",
            field=models.DateTimeField(blank=True, null=True, verbose_name="published"),
        ),
        migrations.AlterField(
            model_name="locator",
            name="scanned",
            field=models.DateTimeField(blank=True, null=True, verbose_name="scanned"),
        ),
        migrations.AlterField(
            model_name="locator",
            name="text",
            field=models.TextField(
                blank=True,
                help_text="Description, summary, or content of the linked-to resource",
                verbose_name="text",
            ),
        ),
        migrations.AlterField(
            model_name="locator",
            name="title",
            field=models.CharField(blank=True, max_length=4000, verbose_name="title"),
        ),
        migrations.AlterField(
            model_name="locator",
            name="url",
            field=models.URLField(max_length=4000, unique=True, verbose_name="url"),
        ),
        migrations.AlterField(
            model_name="locator",
            name="via",
            field=models.ForeignKey(
                blank=True,
                help_text="Link to another locator that referenced this one",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="destinatons",
                related_query_name="destination",
                to="notes.Locator",
                verbose_name="via",
            ),
        ),
        migrations.AlterField(
            model_name="locatorimage",
            name="image",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="images.Image",
                verbose_name="image",
            ),
        ),
        migrations.AlterField(
            model_name="locatorimage",
            name="locator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="notes.Locator",
                verbose_name="locator",
            ),
        ),
        migrations.AlterField(
            model_name="locatorimage",
            name="prominence",
            field=models.PositiveSmallIntegerField(
                default=0, verbose_name="prominence"
            ),
        ),
        migrations.AlterField(
            model_name="note",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="notes.Person",
                verbose_name="author",
            ),
        ),
        migrations.AlterField(
            model_name="note",
            name="created",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="created"
            ),
        ),
        migrations.AlterField(
            model_name="note",
            name="modified",
            field=models.DateTimeField(auto_now=True, verbose_name="modified"),
        ),
        migrations.AlterField(
            model_name="note",
            name="published",
            field=models.DateTimeField(blank=True, null=True, verbose_name="published"),
        ),
        migrations.AlterField(
            model_name="note",
            name="series",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="notes.Series",
                verbose_name="series",
            ),
        ),
        migrations.AlterField(
            model_name="note",
            name="subjects",
            field=models.ManyToManyField(
                help_text="Web page or site that is described or cited in this note.",
                related_name="occurences",
                related_query_name="occurrence",
                through="notes.NoteSubject",
                to="notes.Locator",
                verbose_name="subjects",
            ),
        ),
        migrations.AlterField(
            model_name="note",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="occurences",
                related_query_name="occurrence",
                to="notes.Tag",
                verbose_name="tags",
            ),
        ),
        migrations.AlterField(
            model_name="note",
            name="text",
            field=models.TextField(
                blank=True,
                help_text="Content of note. May be omitted if it has subject links.",
                verbose_name="text",
            ),
        ),
        migrations.AlterField(
            model_name="notesubject",
            name="locator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="notes.Locator",
                verbose_name="locator",
            ),
        ),
        migrations.AlterField(
            model_name="notesubject",
            name="note",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="notes.Note",
                verbose_name="note",
            ),
        ),
        migrations.AlterField(
            model_name="notesubject",
            name="sequence",
            field=models.PositiveSmallIntegerField(default=0, verbose_name="sequence"),
        ),
        migrations.AlterField(
            model_name="person",
            name="description",
            field=models.TextField(blank=True, verbose_name="description"),
        ),
        migrations.AlterField(
            model_name="person",
            name="image",
            field=models.ForeignKey(
                blank=True,
                help_text="Depicts this user.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="images.Image",
                verbose_name="image",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="login",
            field=models.ForeignKey(
                blank=True,
                help_text="If supplied, indicates this person  has an account on this system.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="login",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="native_name",
            field=models.CharField(
                help_text="How this userâ€™s name is presented.",
                max_length=250,
                verbose_name="native name",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="slug",
            field=models.SlugField(
                blank=True,
                help_text="Used in the URL for profile page for this person.",
                max_length=64,
                null=True,
                unique=True,
                verbose_name="slug",
            ),
        ),
        migrations.AlterField(
            model_name="profile",
            name="label",
            field=models.CharField(
                help_text="How to display the username or equivalent for this person on this site. E.g., @damiancugley if on twitter.",
                max_length=4000,
                verbose_name="label",
            ),
        ),
        migrations.AlterField(
            model_name="profile",
            name="person",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="profiles",
                related_query_name="profile",
                to="notes.Person",
                verbose_name="person",
            ),
        ),
        migrations.AlterField(
            model_name="profile",
            name="url",
            field=models.URLField(max_length=4000, verbose_name="URL"),
        ),
        migrations.AlterField(
            model_name="series",
            name="apple_touch_icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional apple-touch-icon. Not transparent.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="apple_touch_series_set",
                related_query_name="apple_touch_series",
                to="images.Image",
                verbose_name="Apple touch icon",
            ),
        ),
        migrations.AlterField(
            model_name="series",
            name="created",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="created"
            ),
        ),
        migrations.AlterField(
            model_name="series",
            name="editors",
            field=models.ManyToManyField(to="notes.Person", verbose_name="editors"),
        ),
        migrations.AlterField(
            model_name="series",
            name="icon",
            field=models.ForeignKey(
                blank=True,
                help_text="Optional favicon. Can use transparency. GIF or PNG.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="images.Image",
                verbose_name="icon",
            ),
        ),
        migrations.AlterField(
            model_name="series",
            name="modified",
            field=models.DateTimeField(auto_now=True, verbose_name="modified"),
        ),
        migrations.AlterField(
            model_name="series",
            name="name",
            field=models.SlugField(
                help_text="Uniquely identifies this series. Used in subdomain.",
                max_length=63,
                verbose_name="name",
            ),
        ),
        migrations.AlterField(
            model_name="series",
            name="title",
            field=models.CharField(max_length=4000, verbose_name="title"),
        ),
        migrations.AlterField(
            model_name="tag",
            name="created",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="created"
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="label",
            field=models.CharField(
                help_text="Conventional capitalization of this tag, as words separated by spaces.",
                max_length=4000,
                unique=True,
                verbose_name="label",
            ),
        ),
        migrations.AlterField(
            model_name="tag",
            name="modified",
            field=models.DateTimeField(auto_now=True, verbose_name="modified"),
        ),
        migrations.AlterField(
            model_name="tag",
            name="name",
            field=models.SlugField(
                help_text="Internal name of the tag, as lowercase words smooshed together.",
                max_length=4000,
                unique=True,
                verbose_name="name",
            ),
        ),
    ]
