{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../src/pannable.js","../../src/FocusPoint.svelte","../../src/main.js"],"sourcesContent":["import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","\n\n\n/**\n * Svelte action to emit events when user tries to drag element about. \n * \n * Originally taken from <https://svelte.dev/tutorial/actions>.\n * TODO. Touch events. \n * \n * @param {Element} node \n */\nexport function pannable(node) {\n    let x;\n    let y;\n    const touches = []\n\n    function handleMousedown(event) {\n        x = event.clientX;\n        y = event.clientY;\n\n        node.dispatchEvent(new CustomEvent('panstart', {\n            detail: { x, y }\n        }));\n\n        window.addEventListener('mousemove', handleMousemove);\n        window.addEventListener('mouseup', handleMouseup);\n    }\n\n    function handleMousemove(event) {\n        const dx = event.clientX - x;\n        const dy = event.clientY - y;\n        x = event.clientX;\n        y = event.clientY;\n\n        node.dispatchEvent(new CustomEvent('panmove', {\n            detail: { x, y, dx, dy }\n        }));\n    }\n\n    function handleMouseup(event) {\n        x = event.clientX;\n        y = event.clientY;\n\n        node.dispatchEvent(new CustomEvent('panend', {\n            detail: { x, y }\n        }));\n\n        window.removeEventListener('mousemove', handleMousemove);\n        window.removeEventListener('mouseup', handleMouseup);\n    }\n\n\n    /**\n     * @param {TouchEvent} event \n     */\n    function handleTouchStart(event) {\n        // TODO cancel existing panning \n        for (const touch of event.changedTouches) {\n            touches.push(copyTouch(touch));\n        }\n        if (touches.length === 1) {\n            event.preventDefault();\n\n            const { clientX, clientY } = touches[0];\n            x = clientX;\n            y = clientY;\n\n            node.dispatchEvent(new CustomEvent('panstart', { detail: { x, y } }));\n\n            window.addEventListener('touchmove', handleTouchMove);\n            window.addEventListener('touchend', handleTouchEnd);\n            window.addEventListener('touchcancel', handleTouchCancel);\n        }\n    }\n\n    function handleTouchMove(event) {\n        for (const touch of event.changedTouches) {\n            const i = findTouch(touch.identifier);\n            if (i >= 0) {\n                touches[i] = copyTouch(touch);\n            }\n        }\n        if (touches.length === 1) {\n            // TODO check in\n            event.preventDefault();\n\n            const { clientX, clientY } = touches[0];\n            const dx = clientX - x;\n            const dy = clientY - y;\n            x = clientX;\n            y = clientY;\n            node.dispatchEvent(new CustomEvent('panmove', {\n                detail: { x, y, dx, dy }\n            }));\n        }\n    }\n\n    function handleTouchEnd(event) {\n        terminateTouches(event, 'panend');\n    }\n\n    function handleTouchCancel(event) {\n        terminateTouches(event, 'pancancel');\n    }\n\n    function terminateTouches(event, eventName) {\n        if (touches.length === 1 && event.changedTouches.length >= 1 && event.changedTouches[0].identifier === touches[0].identifier) {\n            event.preventDefault();\n\n            const { clientX, clientY } = event.changedTouches[0];\n            x = clientX;\n            y = clientY;\n\n            node.dispatchEvent(new CustomEvent('pancancel', {\n                detail: { x, y }\n            }));\n\n            window.removeEventListener('touchmove', handleTouchMove);\n            window.removeEventListener('touchend', handleTouchEnd);\n            window.removeEventListener('touchcancel', handleTouchCancel);\n        }\n\n        for (const touch of event.changedTouches) {\n            const i = findTouch(touch.identifier);\n            if (i >= 0) {\n                touches.splice(i, 1);\n            }\n        }\n    }\n\n    function copyTouch({ clientX, clientY, identifier }) {\n        return { clientX, clientY, identifier };\n    }\n\n    function findTouch(identifier) {\n        for (let i = 0; i < touches.length; ++i) {\n            if (touches[i].identifier === identifier) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    node.addEventListener('mousedown', handleMousedown);\n    node.addEventListener('touchstart', handleTouchStart);\n\n    return {\n        destroy() {\n            node.removeEventListener('mousedown', handleMousedown);\n            node.removeEventListener('touchstart', handleTouchStart);\n        }\n    };\n}","<script>\n    import { createEventDispatcher, onMount } from \"svelte\";\n    import { pannable } from \"./pannable.js\";\n\n    export let src; // URL reference to a representation of the image being edited.\n    export let width; // Dimensions of the source image.\n    export let height;\n    // Initial or corrent value of the focus point.\n    export let focusX = 0.5;\n    export let focusY = 0.5;\n    // Initial size of crop rectangle, if known. These are all fractions of width or height respectively.\n    export let cropLeft = 0.0;\n    export let cropTop = 0.0;\n    export let cropWidth = 1.0;\n    export let cropHeight = 1.0;\n    export let placeholder = \"#999\";\n\n    const cropLeft0 = cropLeft;\n    const cropTop0 = cropTop;\n    const cropWidth0 = cropWidth;\n    const cropHeight0 = cropHeight;\n\n    const r = 32; // Size of target circle.\n\n    const dispatch = createEventDispatcher();\n\n    // Size of Ooble crop preview.\n    $: [oobleWidth, oobleHeight] = cropSize(\n        1.0,\n        cropWidth * width,\n        cropHeight * height\n    );\n    $: oobleX = focusX * (cropWidth * width - oobleWidth);\n    $: oobleY = focusY * (cropHeight * height - oobleHeight);\n\n    // Mastodon has a different way to determine the crop rectangle.\n    $: [mastoWidth, mastoHeight] = cropSize(\n        16.0 / 9.0,\n        cropWidth * width,\n        cropHeight * height\n    );\n    let mastoX, mastoY;\n    $: if (mastoWidth === cropWidth * width) {\n        mastoX = 0;\n        mastoY = Math.min(\n            cropHeight * height - mastoHeight,\n            Math.max(0, focusY * cropHeight * height - 0.5 * mastoHeight)\n        );\n    } else {\n        mastoX = Math.min(\n            cropWidth * width - mastoWidth,\n            Math.max(0, focusX * cropWidth * width - 0.5 * mastoWidth)\n        );\n        mastoY = 0;\n    }\n\n    /**\n     * Calculate dimensions of crop rectangle.\n     */\n    function cropSize(ratio, width, height) {\n        return width > height * ratio\n            ? [height * ratio, height]\n            : [width, width / ratio];\n    }\n\n    onMount(() => {\n        const availableWidth = document.documentElement.clientWidth;\n        const availableHeight = document.documentElement.clientHeight;\n        /* - numbersDiv.clientHeight */\n        if (width > availableWidth || height > availableHeight) {\n            // Scale down to fit.\n            if (width / height < availableWidth / availableHeight) {\n                width *= availableHeight / height;\n                height = availableHeight;\n            } else {\n                height *= availableWidth / width;\n                width = availableWidth;\n            }\n        }\n    });\n\n    function handlePanMove(e) {\n        focusX = Math.max(Math.min(1, +focusX + e.detail.dx / width), 0);\n        focusY = Math.max(Math.min(1, +focusY + e.detail.dy / height), 0);\n        dispatch(\"focuspointchange\", { focusX, focusY });\n    }\n\n    const handleCropLeftTopPanMove = (e) => {\n        const newLeft = +cropLeft + e.detail.dx / width;\n        cropLeft = Math.max(Math.min(1.0 - r / width, newLeft), 0.0);\n        const newTop = +cropTop + e.detail.dy / height;\n        cropTop = Math.max(Math.min(1.0 - r / height, newTop), 0.0);\n        cropWidth = Math.max(Math.min(1.0 - cropLeft, +cropWidth), r / width);\n        cropHeight = Math.max(Math.min(1.0 - cropTop, +cropHeight), r / width);\n    };\n    const handleCropWidthHeightPanMove = (e) => {\n        const newWidth = +cropWidth + e.detail.dx / width;\n        cropWidth = Math.max(Math.min(1.0 - cropLeft, newWidth), r / width);\n        const newHeight = +cropHeight + e.detail.dy / height;\n        cropHeight = Math.max(Math.min(1.0 - cropTop, newHeight), r / height);\n    };\n    const handeCropPanEnd = (e) => {\n        dispatch(\"cropchange\", { cropLeft, cropTop, cropWidth, cropHeight });\n    };\n</script>\n\n<!-- the SVG has to be wrapped in DIV otherwise we don’t seem to get the image element bound. -->\n<div class=\"focus-point\">\n    <svg class=\"im\" {width} {height} viewBox=\"0 0 {width} {height}\">\n        <rect {width} {height} fill={placeholder} />\n        <image\n            xlink:href={src}\n            x={cropLeft0 * width}\n            y={cropTop0 * height}\n            width={cropWidth0 * width}\n            height={cropHeight0 * height} />\n        <rect {width} height={cropTop * height} fill=\"rgba(0, 0, 0, 0.25)\" />\n        <rect\n            {width}\n            y={(+cropTop + +cropHeight) * height}\n            height={(1 - cropTop - cropHeight) * height}\n            fill=\"rgba(0, 0, 0, 0.25)\" />\n        <rect\n            width={cropLeft * width}\n            y={cropTop * height}\n            height={cropHeight * height}\n            fill=\"rgba(0, 0, 0, 0.25)\" />\n        <rect\n            x={(+cropLeft + +cropWidth) * width}\n            width={(1 - cropLeft - cropWidth) * width}\n            y={cropTop * height}\n            height={cropHeight * height}\n            fill=\"rgba(0, 0, 0, 0.25)\" />\n        <circle\n            use:pannable\n            cx={cropLeft * width}\n            cy={cropTop * height}\n            {r}\n            stroke-width=\"1\"\n            stroke=\"#F30\"\n            fill=\"rgba(255, 51, 0, 0.1)\"\n            on:panmove={handleCropLeftTopPanMove}\n            on:panend={handeCropPanEnd}\n            cursor=\"move\" />\n        <circle\n            use:pannable\n            cx={(+cropLeft + +cropWidth) * width}\n            cy={(+cropTop + +cropHeight) * height}\n            {r}\n            stroke-width=\"1\"\n            stroke=\"#EF0\"\n            fill=\"rgba(238, 255, 0, 0.1)\"\n            cursor=\"nwse-resize\"\n            on:panend={handeCropPanEnd}\n            on:panmove={handleCropWidthHeightPanMove} />\n        <g transform=\"translate({cropLeft * width}, {cropTop * height})\">\n            <rect\n                x={mastoX + 0.5}\n                y={mastoY + 0.5}\n                width={mastoWidth - 1}\n                height={mastoHeight - 1}\n                stroke-width=\"1\"\n                stroke=\"#F56\"\n                fill=\"none\" />\n            <rect\n                x={oobleX + 0.5}\n                y={oobleY + 0.5}\n                width={oobleWidth - 1}\n                height={oobleWidth - 1}\n                stroke-width=\"1\"\n                stroke=\"#0BA\"\n                fill=\"none\" />\n            <circle\n                use:pannable\n                cx={focusX * cropWidth * width}\n                cy={focusY * cropHeight * height}\n                {r}\n                stroke-width=\"1\"\n                stroke=\"#B0A\"\n                fill=\"rgba(187, 0, 170, 0.1)\"\n                on:panmove={handlePanMove} />\n        </g>\n    </svg>\n</div>\n","import FocusPoint from './FocusPoint.svelte';\n\n// Extract info from original form …\nconst form = document.getElementById('focus-ui-form');\nconst elt = document.getElementById('focus-ui');\n\nconst imgElt = elt.querySelector('img');\nconst src = imgElt.src;\nimgElt.remove();\n\nconst { width, height, placeholder } = JSON.parse(document.getElementById(\"imageData\").text);\n\nconst handleFocusPointChange = (e) => {\n    const { detail: { focusX, focusY } } = e;\n    form.focus_x.value = focusX;\n    form.focus_y.value = focusY;\n}\nconst handleCropChange = (e) => {\n    const { detail: { cropLeft, cropTop, cropWidth, cropHeight } } = e;\n    console.log('cropchange', cropLeft, cropTop, cropWidth, cropHeight);\n    form.crop_left.value = cropLeft;\n    form.crop_top.value = cropTop;\n    form.crop_width.value = cropWidth;\n    form.crop_height.value = cropHeight;\n}\n\nconst focus = {\n    focusX: form.focus_x.value,\n    focusY: form.focus_y.value,\n}\nconst crop = {\n    cropLeft: form.crop_left.value,\n    cropTop: form.crop_top.value,\n    cropWidth: form.crop_width.value,\n    cropHeight: form.crop_height.value,\n}\n\nconst app = new FocusPoint({\n    target: elt,\n    props: {\n        src,\n        width,\n        height,\n        ...focus,\n        ...crop,\n        placeholder,\n    },\n});\napp.$on('focuspointchange', handleFocusPointChange);\napp.$on('cropchange', handleCropChange);\n\nexport default app;\n"],"names":["get_current_component","Error","pannable","node","x","y","touches","handleMousedown","event","clientX","clientY","dispatchEvent","CustomEvent","detail","window","addEventListener","handleMousemove","handleMouseup","dx","dy","removeEventListener","handleTouchStart","touch","changedTouches","push","copyTouch","length","preventDefault","handleTouchMove","handleTouchEnd","handleTouchCancel","i","findTouch","identifier","terminateTouches","eventName","splice","destroy","ctx","attr","image","image_x_value","image_y_value","image_width_value","image_height_value","rect1","rect1_height_value","rect2","rect2_height_value","rect3","rect3_width_value","rect3_y_value","rect3_height_value","rect4","rect4_width_value","rect4_y_value","rect4_height_value","circle0","circle0_cx_value","circle0_cy_value","rect5","rect5_x_value","rect5_y_value","rect5_width_value","rect5_height_value","rect6","rect6_x_value","rect6_y_value","rect6_width_value","rect6_height_value","g","g_transform_value","svg","svg_viewBox_value","insert","target","div","anchor","append","rect0","circle1","circle2","dirty","r","cropSize","ratio","width","height","src","$$props","focusX","focusY","cropLeft","cropTop","cropWidth","cropHeight","placeholder","cropLeft0","cropTop0","cropWidth0","cropHeight0","dispatch","component","type","cancelable","$$","callbacks","createEventDispatcher","mastoX","mastoY","fn","availableWidth","document","documentElement","clientWidth","availableHeight","clientHeight","$$invalidate","on_mount","oobleWidth","oobleHeight","oobleX","oobleY","mastoWidth","mastoHeight","Math","min","max","e","newLeft","newTop","newWidth","newHeight","form","getElementById","elt","imgElt","querySelector","remove","JSON","parse","text","focus","focus_x","value","focus_y","crop","crop_left","crop_top","crop_width","crop_height","app","props","$on","console","log"],"mappings":"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"}